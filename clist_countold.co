#include "main.h"
#include <assert.h>

size_t clist_count(char *argv)
{
	size_t i = 0, count = 1;
	char c, d, m = 0;

	for (; argv[i] != '\0'; i++)
	{
		c = argv[i];
		d = argv[i+1];
		if (c == ';' && (d == ' '))
		{
			count++;
			m = 1;
		}
	}
	if (m == 0)
		return (1);
	return (count);
}

char **fill_clist(char *argv)
{
	char **holder;
	size_t length = clist_count(argv), start = 0;
	size_t i = 0, hi = 0, count = 0;
	char c, d, e;

	holder = malloc(sizeof(char *) * (length + 1));
	assert(holder);
	for (; argv[i] != '\0'; i++)
	{
		c = argv[i];
		d = argv[i+1];
		e = argv[i+2];
		if (c == ' ' && d == ';' && (e == ' ' || e == '\0'))
		{
			holder[hi] = strndup(&argv[start], i - start);
			count++;
			hi++;
			if (e == '\0')
				start = i+2;
			else
				start = i+3;
		}
	}
	if (hi < length)
	{
		holder[hi] = _strdup(&argv[start]);
		hi++;
	}
	holder[hi] = NULL;
	return (holder);
}

void iterate_clist(char **clist)
{
	size_t i;
	printf("print_list:\n");
	for (i = 0; clist[i]; i++)
	{
		printf("%s\n", clist[i]);
	}
}

void print_list(char **list)
{
	size_t i;
	printf("print_list:\n");
	for (i = 0; list[i]; i++)
	{
		printf("%s\n", list[i]);
	}
}

void clists_from_str(char *input)
{
	char **clist;

	clist = fill_clist(input);
	iterate_clist(clist);
	free_list(clist);

}

int main()
{
	char *input;

	input = get_input();
	printf("found %ld lists in %s\n", clist_count(input), input);
	clists_from_str(input);
	free(input);
	return (0);
}
